{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js"],"names":[],"mappingsfile":"xify.lite.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var jQuery = require('jquery');\n\n\n['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Array'].forEach( \n    function(name) { \n        jQuery['is' + name] = function(obj) {\n              return Object.prototype.toString.call(obj) == '[object ' + name + ']';\n    };\n});\n\n\n(function($, undefined) {\n\t//History events & Ajax\n\tif(window.History){\n\t\tmodule.exports = $;\n\t\tvar history = window.History;\n\t\t$.xify = history;\n\t\t//$.xify.options.html4Mode = true;\n\n\t\t//Create an initial Deffered, pretending to be an XHR object, already resolved, to kick things off.\n\t\t//The xhr object is global to this plugin so that we can limit requests to one at a time.\n\t\tvar xhr = $.Deferred().resolve(null);\n\n\n\t\tvar fetch = function(act) {\n\t\t\tif(xhr.state() != 'pending') {\n\n\t\t\t\tact.beforeSend = function(xhr, opt) {\n\t\t\t\t\t$(window).trigger($.Event('fetching.xify' + act.eventNameSpace, {xhr: xhr, act: act}), xhr);\n\t\t\t\t\t//xhr.notify();\n\t\t\t\t\t//console.log($.ajaxSettings.xhr());\n\t\t\t\t\t//return false;\n\t\t\t\t}\n\n\t\t\t\tact.error = function(xhr, status, error) {\n\t\t\t\t\tif(window.console && console.log)\n\t\t\t\t\t\tconsole.log('xify error:', error);\n\t\t\t\t}\n\n\t\t\t\tact.success = function(data, status, xhr) {\n\t\t\t\t\tif(!act.elementMap)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t//TODO: Make the elementMap replacement much more powerful, \n\t\t\t\t\t//enabling lists of elements to replace each other, appends, prepends, inserts at etc.\n\n\t\t\t\t\tvar $html = $('<div>').append($.parseHTML(data));\n\t\t\t\t\t//for(var key in act.elementMap) {\n\t\t\t\t\t$.each(act.elementMap, function(key, val) {\n\t\t\t\t\t\t//var val = act.elementMap[key];\n\t\t\t\t\t\tvar $target = $(val.to || val.from);\n\t\t\t\t\t\tvar $replacement = $html.find(val.from).css('display', 'none');\n\t\t\t\t\t\tvar replacingEvent = $.Event('replacing.xify', {elementMap: val, original: $target, replacement: $replacement[0]});\n\t\t\t\t\t\tvar replacedEvent = $.Event('replaced.xify', {elementMap: val, original: $target, replacement: $replacement[0]});\n\n\n\t\t\t\t\t\t$target.trigger(replacingEvent);\n\t\t\t\t\t\t$target.promise().done(function() {\n\t\t\t\t\t\t\tif($.isArray(val.attr) && val.attr.length > 0) {\n\t\t\t\t\t\t\t\t$target.attr(val.attr[0], $replacement.attr(val.attr[1] || val.attr[0]));\n\t\t\t\t\t\t\t\t$target.trigger(replacedEvent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if($.isString(val.attr)) {\n\t\t\t\t\t\t\t\t$target.attr(val.attr, $replacement.attr(val.attr));\n\t\t\t\t\t\t\t\t$target.trigger(replacedEvent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(!val.attr) {\n\t\t\t\t\t\t\t\t$target.replaceWith($replacement);\n\t\t\t\t\t\t\t\t$replacement.trigger(replacedEvent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\txhr = $.ajax(act);\n\t\t\t\t\n\t\t\t\txhr.always(function(dxhr, status, exhr) {\n\t\t\t\t\t//console.log(dxhr);\n\t\t\t\t\t$(window).trigger($.Event('fetched.xify' + act.eventNameSpace, {xhr: xhr, act: act}), xhr);\n\t\t\t\t}).done(function(data, status, xhr) {\n\t\t\t\t\t//nop\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//act.fetched = true;\n\t\t\treturn xhr;\n\t\t}\n\n\t\t$(window).on('statechange', function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tvar state = history.getState();\n\t\t\tvar act = state.data;\n\n\t\t\t//Check that this history event has our act data, otherwise ignore it.\n\t\t\tif(state.data && state.data.url && state.data.isXify)\n\t\t\t\tfetch(act);\n\t\t\t\n\t\t});\n\n\t\t$.xify.on = function(ev, el, fn) {\n\t\t\t$(document).on(ev, el, function(ev) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tvar state = history.getState();\n\t\t\t\tvar act = null;\n\n\t\t\t\tif(xhr.state() != 'pending') {\n\t\t\t\t\tact = {type: 'GET'};\n\n\t\t\t\t\tif($.isFunction(fn))\n\t\t\t\t\t\t//act = fn(ev);\n\t\t\t\t\t\t$.extend(act, fn(ev));\n\t\t\t\t\telse if($.isString(fn)) {\n\t\t\t\t\t\tact.url = fn;\n\t\t\t\t\t}\n\n\t\t\t\t\tact.isXify = true;\n\t\t\t\t\tact.actionTrigger = ev.type;\n\t\t\t\t\tact.actionElement = el;\n\t\t\t\t\tact.eventNameSpace = '';\n\n\t\t\t\t\t//If the request is not a GET and you haven't explicity set fetchSecretly\n\t\t\t\t\t//then assume you don't want to update history, and just want to fetch some data.\n\t\t\t\t\tif(act.type != 'GET' && act.fetchSecretly == undefined)\n\t\t\t\t\t\tact.fetchSecretly = true;\n\n\t\t\t\t\t//act.context = ev.currentTarget;\n\n\t\t\t\t\t//console.log(act);\n\t\t\t\t\t//TODO: Filter act for consistency/serialization, because pushState will serialize it.\n\t\t\t\t\tif((act.url == state.url && act.fetchAgain) || act.fetchSecretly)\n\t\t\t\t\t\tfetch(act);\n\t\t\t\t\telse\n\t\t\t\t\t\thistory.pushState(act, null, act.url);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\n\t\t// $.xify.on('click', 'a', function(ev) {\n\t\t// \treturn {type: 'GET', url: $(ev.currentTarget).attr('href'), data: null, \n\t\t// \t\telementMap: [{from: '#main'}]};\n\t\t// });\n\n\t\t/*$.xify.on('submit', 'form', function(ev) {\n\t\t\treturn {type: 'GET', url: $(ev.currentTarget).attr('href'), data: null};\n\t\t});*/\n\n\t\t// $(window).on('fetching.xify', function(ev, xhr) {\n\t\t// \t//console.log(ev.xhr);\n\n\t\t// \tev.xhr.done(function(data, status, xhr) {\n\t\t// \t\t//console.log(data);\n\t\t// \t});\n\t\t// });\n\n\t\t/*$(document).on('submit', 'form', function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tconsole.log(ev);\n\t\t});*/\n\t}\n\n})(jQuery);\n"]}